{"ast":null,"code":"var _jsxFileName = \"/home/iryna/Desktop/NodeJS-in-AWS-Training/src/components/CartItems/CartItems.tsx\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { formatAsPrice } from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: 700\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function CartItems({\n  items,\n  isEditable\n}) {\n  const classes = useStyles();\n  const totalPrice = items.reduce((total, item) => item.count * item.product.price + total, 0);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, items.map(cartItem => /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    key: cartItem.product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, isEditable && /*#__PURE__*/React.createElement(AddProductToCart, {\n    product: cartItem.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: cartItem.product.title,\n    secondary: cartItem.product.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, formatAsPrice(cartItem.product.price), \" x \", cartItem.count, \" = \", formatAsPrice(cartItem.product.price * cartItem.count)))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Free\")), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, formatAsPrice(totalPrice)))));\n}","map":{"version":3,"sources":["/home/iryna/Desktop/NodeJS-in-AWS-Training/src/components/CartItems/CartItems.tsx"],"names":["React","Typography","List","ListItem","ListItemText","makeStyles","formatAsPrice","AddProductToCart","useStyles","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","CartItems","items","isEditable","classes","totalPrice","reduce","item","count","product","price","map","cartItem","id","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CartItem} from \"models/CartItem\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype CartItemsProps = {\n  items: CartItem[],\n  isEditable: boolean\n};\n\nexport default function CartItems({items, isEditable}: CartItemsProps) {\n  const classes = useStyles();\n\n  const totalPrice: number = items.reduce((total, item) => (item.count * item.product.price + total), 0);\n\n  return (\n    <>\n      <List disablePadding>\n        {items.map((cartItem: CartItem) => (\n          <ListItem className={classes.listItem} key={cartItem.product.id}>\n            {isEditable && <AddProductToCart product={cartItem.product}/>}\n            <ListItemText primary={cartItem.product.title} secondary={cartItem.product.description}/>\n            <Typography\n              variant=\"body2\">{formatAsPrice(cartItem.product.price)} x {cartItem.count} = {formatAsPrice(cartItem.product.price * cartItem.count)}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Shipping\"/>\n          <Typography\n            variant=\"body2\">Free</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\"/>\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            {formatAsPrice(totalPrice)}\n          </Typography>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}