{"ast":null,"code":"var _jsxFileName = \"/home/iryna/Desktop/nodejs-aws-fe/src/components/pages/PageCart/PageCart.tsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCartItems, clearCart } from \"store/cartSlice\";\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport { Formik, Form, FastField } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TextField } from 'formik-material-ui';\nimport axios from \"axios\";\nimport API_PATHS from \"constants/apiPaths\";\nimport { AddressSchema, OrderSchema } from \"models/Order\";\nconst useStyles = makeStyles(theme => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\nconst initialAddressValues = AddressSchema.cast();\n\nconst CartIsEmpty = () => /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h6\",\n  gutterBottom: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, \"The cart is empty. Didn't you like anything in our shop?\");\n\nconst Success = () => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h5\",\n  gutterBottom: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, \"Thank you for your order.\"), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"subtitle1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, \"Your order is placed. Our manager will call you soon to clarify the details.\"));\n\nconst renderForm = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h6\",\n  gutterBottom: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}, \"Shipping address\"), /*#__PURE__*/React.createElement(Grid, {\n  container: true,\n  spacing: 2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  sm: 6,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FastField, {\n  component: TextField,\n  name: \"lastName\",\n  label: \"Last Name\",\n  fullWidth: true,\n  autoComplete: \"off\",\n  required: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  sm: 6,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FastField, {\n  component: TextField,\n  name: \"firstName\",\n  label: \"First Name\",\n  fullWidth: true,\n  autoComplete: \"off\",\n  required: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FastField, {\n  component: TextField,\n  name: \"address\",\n  label: \"Shipping address\",\n  fullWidth: true,\n  autoComplete: \"off\",\n  multiline: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FastField, {\n  component: TextField,\n  name: \"comment\",\n  label: \"Comment\",\n  fullWidth: true,\n  autoComplete: \"off\",\n  multiline: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }\n}))));\n\nexport default function PageCart() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const cartItems = useSelector(selectCartItems);\n  const isCartEmpty = !cartItems.length;\n  const [address, setAddress] = useState(initialAddressValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n\n    if (activeStep === 2) {\n      const formattedValues = OrderSchema.cast({\n        items: cartItems.map(i => ({\n          productId: i.product.id,\n          count: i.count\n        })),\n        address\n      });\n      axios.put(`${API_PATHS.order}/order`, formattedValues).then(() => {\n        dispatch(clearCart());\n        setActiveStep(activeStep + 1);\n      });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(PaperLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Checkout\"), /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    className: classes.stepper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: false,\n    initialValues: initialAddressValues,\n    validationSchema: AddressSchema,\n    isInitialValid: false,\n    onSubmit: () => undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, props => {\n    const {\n      values,\n      isValid\n    } = props;\n    setAddress(values);\n    setIsFormValid(isValid);\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, isCartEmpty && activeStep === 0 && /*#__PURE__*/React.createElement(CartIsEmpty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 53\n      }\n    }), activeStep === 0 && !isCartEmpty && /*#__PURE__*/React.createElement(ReviewCart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 54\n      }\n    }), activeStep === 1 && renderForm(), activeStep === 2 && /*#__PURE__*/React.createElement(ReviewOrder, {\n      address: address,\n      items: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 38\n      }\n    }), activeStep === 3 && /*#__PURE__*/React.createElement(Success, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 38\n      }\n    }));\n  }), activeStep <= 2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, activeStep !== 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Back\"), !isCartEmpty && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    disabled: activeStep === 1 && !isFormValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, activeStep === steps.length - 1 ? 'Place order' : 'Next'))));\n}","map":{"version":3,"sources":["/home/iryna/Desktop/nodejs-aws-fe/src/components/pages/PageCart/PageCart.tsx"],"names":["React","useState","makeStyles","Stepper","Step","StepLabel","Button","Typography","ReviewCart","ReviewOrder","useDispatch","useSelector","selectCartItems","clearCart","PaperLayout","Formik","Form","FastField","Grid","TextField","axios","API_PATHS","AddressSchema","OrderSchema","useStyles","theme","stepper","padding","spacing","buttons","display","justifyContent","button","marginTop","marginLeft","steps","initialAddressValues","cast","CartIsEmpty","Success","renderForm","PageCart","classes","activeStep","setActiveStep","cartItems","isCartEmpty","length","address","setAddress","isFormValid","setIsFormValid","dispatch","handleNext","formattedValues","items","map","i","productId","product","id","count","put","order","then","handleBack","label","undefined","props","values","isValid"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCartItems, clearCart} from \"store/cartSlice\";\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport {Formik, Form, FormikProps, FormikValues, FastField} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from 'formik-material-ui';\nimport axios from \"axios\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {AddressSchema, OrderSchema} from \"models/Order\";\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\n\nconst initialAddressValues: any = AddressSchema.cast();\n\nconst CartIsEmpty = () => (\n  <Typography variant=\"h6\" gutterBottom>\n    The cart is empty. Didn't you like anything in our shop?\n  </Typography>\n);\n\nconst Success = () => (\n  <React.Fragment>\n    <Typography variant=\"h5\" gutterBottom>\n      Thank you for your order.\n    </Typography>\n    <Typography variant=\"subtitle1\">\n      Your order is placed. Our manager will call you soon to clarify the details.\n    </Typography>\n  </React.Fragment>\n);\n\nconst renderForm = () => (\n  <>\n    <Typography variant=\"h6\" gutterBottom>\n      Shipping address\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"lastName\"\n          label=\"Last Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"firstName\"\n          label=\"First Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"address\"\n          label=\"Shipping address\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"comment\"\n          label=\"Comment\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default function PageCart() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState<number>(0);\n  const cartItems = useSelector(selectCartItems);\n  const isCartEmpty = !cartItems.length;\n  const [address, setAddress] = useState<FormikValues>(initialAddressValues);\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    if (activeStep === 2) {\n      const formattedValues = OrderSchema.cast({\n        items: cartItems.map(i => ({productId: i.product.id, count: i.count})),\n        address\n      });\n      axios.put(`${API_PATHS.order}/order`, formattedValues)\n        .then(() => {\n          dispatch(clearCart());\n          setActiveStep(activeStep + 1);\n        });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Checkout\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        <Formik\n          enableReinitialize={false}\n          initialValues={initialAddressValues}\n          validationSchema={AddressSchema}\n          isInitialValid={false}\n          onSubmit={() => undefined}\n        >\n          {(props: FormikProps<FormikValues>) => {\n            const {values, isValid} = props;\n            setAddress(values);\n            setIsFormValid(isValid);\n            return (\n              <Form>\n                {isCartEmpty && activeStep === 0 && <CartIsEmpty/>}\n                {activeStep === 0 && !isCartEmpty && <ReviewCart/>}\n                {activeStep === 1 && renderForm()}\n                {activeStep === 2 && <ReviewOrder address={address} items={cartItems}/>}\n                {activeStep === 3 && <Success/>}\n              </Form>\n            )\n          }}\n        </Formik>\n\n        {activeStep <= 2 && <div className={classes.buttons}>\n          {activeStep !== 0 && (\n            <Button onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n          )}\n          {!isCartEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              className={classes.button}\n              disabled={activeStep === 1 && !isFormValid}\n            >\n              {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n            </Button>)}\n        </div>}\n      </React.Fragment>\n    </PaperLayout>\n  );\n}"]},"metadata":{},"sourceType":"module"}