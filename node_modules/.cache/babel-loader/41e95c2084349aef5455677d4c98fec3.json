{"ast":null,"code":"var _jsxFileName = \"/home/iryna/Desktop/NodeJS-in-AWS-Training/src/components/pages/PageProductForm/PageProductForm.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { ProductSchema } from \"models/Product\";\nimport { Formik, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\n\nconst Form = props => {\n  const {\n    // values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    name: \"title\",\n    label: \"Title\",\n    fullWidth: true,\n    autoComplete: \"off\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    name: \"description\",\n    label: \"Description\",\n    fullWidth: true,\n    autoComplete: \"off\",\n    multiline: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    name: \"price\",\n    label: \"Price ($)\",\n    fullWidth: true,\n    autoComplete: \"off\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    name: \"count\",\n    label: \"Count\",\n    fullWidth: true,\n    autoComplete: \"off\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !dirty || isSubmitting || !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Save Product\"))));\n};\n\nconst emptyValues = ProductSchema.cast();\nexport default function PageProductForm() {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [product, setProduct] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const onSubmit = values => {\n    const formattedValues = ProductSchema.cast(values);\n    const productToSave = id ? { ...ProductSchema.cast(formattedValues),\n      id\n    } : formattedValues;\n    axios.put(`${API_PATHS.bff}/product`, productToSave).then(() => history.push('/admin/products'));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n\n    axios.get(`${API_PATHS.bff}/product/${id}`).then(res => {\n      setProduct(res.data);\n      setIsLoading(false);\n    });\n  }, [id]);\n  if (isLoading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"loading...\");\n  return /*#__PURE__*/React.createElement(PaperLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, id ? 'Edit product' : 'Create new product'), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: product || emptyValues,\n    validationSchema: ProductSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 48\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/iryna/Desktop/NodeJS-in-AWS-Training/src/components/pages/PageProductForm/PageProductForm.tsx"],"names":["React","useEffect","useState","Button","Grid","ProductSchema","Formik","Field","TextField","axios","useHistory","useParams","PaperLayout","Typography","API_PATHS","Form","props","dirty","isSubmitting","isValid","handleSubmit","emptyValues","cast","PageProductForm","history","id","product","setProduct","isLoading","setIsLoading","onSubmit","values","formattedValues","productToSave","put","bff","then","push","get","res","data"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Product, ProductSchema} from \"models/Product\";\nimport {Formik, Field, FormikProps, FormikValues} from 'formik';\nimport {TextField} from 'formik-material-ui';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    // values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"description\"\n            label=\"Description\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"price\"\n            label=\"Price ($)\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"count\"\n            label=\"Count\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Save Product\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nconst emptyValues: any = ProductSchema.cast();\n\nexport default function PageProductForm() {\n  const history = useHistory();\n  const {id} = useParams();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onSubmit = (values: FormikValues) => {\n    const formattedValues = ProductSchema.cast(values);\n    const productToSave = id ? {...ProductSchema.cast(formattedValues), id} : formattedValues;\n    axios.put(`${API_PATHS.bff}/product`, productToSave)\n      .then(() => history.push('/admin/products'));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    axios.get(`${API_PATHS.bff}/product/${id}`)\n      .then(res => {\n        setProduct(res.data);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        {id ? 'Edit product' : 'Create new product'}\n      </Typography>\n      <Formik\n        initialValues={product || emptyValues}\n        validationSchema={ProductSchema}\n        onSubmit={onSubmit}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n    </PaperLayout>\n  );\n}"]},"metadata":{},"sourceType":"module"}