{"ast":null,"code":"import _slicedToArray from\"/home/iryna/Desktop/nodejs-aws-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import{useParams}from'react-router-dom';import PaperLayout from\"components/PaperLayout/PaperLayout\";import Typography from\"@material-ui/core/Typography\";import API_PATHS from\"constants/apiPaths\";import ReviewOrder from\"components/pages/PageCart/components/ReviewOrder\";import{ORDER_STATUS,ORDER_STATUS_FLOW}from\"constants/order\";import Button from\"@material-ui/core/Button\";import MenuItem from\"@material-ui/core/MenuItem\";import{Field,Formik}from\"formik\";import Grid from\"@material-ui/core/Grid\";import{TextField}from\"formik-material-ui\";import Table from\"@material-ui/core/Table\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import TableCell from\"@material-ui/core/TableCell\";import TableBody from\"@material-ui/core/TableBody\";import TableContainer from\"@material-ui/core/TableContainer\";var Form=function Form(props){var values=props.values,dirty=props.dirty,isSubmitting=props.isSubmitting,isValid=props.isValid,handleSubmit=props.handleSubmit;var helperText='';if(values.status===ORDER_STATUS.approved){helperText='Setting status to APPROVED will decrease products count from stock!!!';}// TODO add check if status was changed from approved to cancelled\n//  to increase product count back again\n// if ((values.status) === ORDER_STATUS.cancelled) {\n//   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\n// }\nreturn/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,autoComplete:\"off\"},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Field,{component:TextField,name:\"status\",label:\"Status\",select:true,fullWidth:true,helperText:helperText},ORDER_STATUS_FLOW.map(function(status,index){return/*#__PURE__*/React.createElement(MenuItem,{key:index,value:status},status);}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Field,{component:TextField,name:\"comment\",label:\"Comment\",fullWidth:true,autoComplete:\"off\",multiline:true})),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:12,justify:\"space-between\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",disabled:!dirty||isSubmitting||!isValid},\"Change status\"))));};export default function PageOrder(){var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),order=_useState2[0],setOrder=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var onChangeStatus=function onChangeStatus(values){return axios.put(\"\".concat(API_PATHS.order,\"/order/\").concat(order.id,\"/status\"),values).then(function(_ref){var data=_ref.data;return setOrder(data);});};useEffect(function(){if(!id){setIsLoading(false);return;}var promises=[axios.get(\"\".concat(API_PATHS.product,\"/product\")),axios.get(\"\".concat(API_PATHS.order,\"/order/\").concat(id))];Promise.all(promises).then(function(_ref2){var _ref3=_slicedToArray(_ref2,2),products=_ref3[0].data,order=_ref3[1].data;var cartItems=order.items.map(function(i){return{product:products.find(function(p){return p.id===i.productId;}),count:i.count};});setOrder(order);setCartItems(cartItems);setIsLoading(false);});},[id]);if(isLoading)return/*#__PURE__*/React.createElement(\"p\",null,\"loading...\");var statusHistory=order.statusHistory||[];var lastStatusItem=statusHistory[statusHistory.length-1];return/*#__PURE__*/React.createElement(PaperLayout,null,/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h4\",align:\"center\"},\"Manage order\"),/*#__PURE__*/React.createElement(ReviewOrder,{address:order.address,items:cartItems}),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},\"Status:\"),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"primary\"},lastStatusItem===null||lastStatusItem===void 0?void 0:lastStatusItem.status.toUpperCase()),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},\"Change status:\"),/*#__PURE__*/React.createElement(Formik,{initialValues:{status:lastStatusItem.status,comment:''},enableReinitialize:true,onSubmit:onChangeStatus},function(props){return/*#__PURE__*/React.createElement(Form,props);}),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},\"Status history:\"),/*#__PURE__*/React.createElement(TableContainer,null,/*#__PURE__*/React.createElement(Table,{\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Status\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Date and Time\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Comment\"))),/*#__PURE__*/React.createElement(TableBody,null,statusHistory.map(function(statusHistoryItem){return/*#__PURE__*/React.createElement(TableRow,{key:order.id},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},statusHistoryItem.status.toUpperCase()),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},new Date(statusHistoryItem.timestamp).toString()),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},statusHistoryItem.comment));})))));}","map":{"version":3,"sources":["/home/iryna/Desktop/nodejs-aws-fe/src/components/pages/PageOrder/PageOrder.tsx"],"names":["React","useEffect","useState","axios","useParams","PaperLayout","Typography","API_PATHS","ReviewOrder","ORDER_STATUS","ORDER_STATUS_FLOW","Button","MenuItem","Field","Formik","Grid","TextField","Table","TableHead","TableRow","TableCell","TableBody","TableContainer","Form","props","values","dirty","isSubmitting","isValid","handleSubmit","helperText","status","approved","map","index","PageOrder","id","order","setOrder","cartItems","setCartItems","isLoading","setIsLoading","onChangeStatus","put","then","data","promises","get","product","Promise","all","products","items","i","find","p","productId","count","statusHistory","lastStatusItem","length","address","toUpperCase","comment","statusHistoryItem","Date","timestamp","toString"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OrderItem} from \"models/Order\";\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {CartItem} from \"models/CartItem\";\nimport {Product} from \"models/Product\";\nimport ReviewOrder from \"components/pages/PageCart/components/ReviewOrder\";\nimport {ORDER_STATUS, ORDER_STATUS_FLOW} from \"constants/order\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Field, Formik, FormikProps, FormikValues} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from \"formik-material-ui\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n  let helperText = '';\n  if ((values.status) === ORDER_STATUS.approved) {\n    helperText = 'Setting status to APPROVED will decrease products count from stock!!!';\n  }\n  // TODO add check if status was changed from approved to cancelled\n  //  to increase product count back again\n  // if ((values.status) === ORDER_STATUS.cancelled) {\n  //   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\n  // }\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"status\"\n            label=\"Status\"\n            select\n            fullWidth\n            helperText={helperText}\n          >\n            {ORDER_STATUS_FLOW.map((status,index) => (\n              <MenuItem key={index} value={status}>\n                {status}\n              </MenuItem>\n            ))}\n          </Field>\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"comment\"\n            label=\"Comment\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Change status\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default function PageOrder() {\n  const {id} = useParams();\n  const [order, setOrder] = useState<any>({});\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onChangeStatus = (values: FormikValues) => {\n    return axios.put(`${API_PATHS.order}/order/${order.id}/status`, values)\n      .then(({data}) => setOrder(data));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    const promises: any[] = [\n      axios.get(`${API_PATHS.product}/product`),\n      axios.get(`${API_PATHS.order}/order/${id}`)\n    ];\n    Promise.all(promises)\n      .then(([{data: products}, {data: order}]) => {\n        const cartItems: CartItem[] = order.items.map((i: OrderItem) => ({\n          product: products.find((p: Product) => p.id === i.productId),\n          count: i.count\n        }));\n        setOrder(order);\n        setCartItems(cartItems);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  const statusHistory = order.statusHistory || [];\n\n  const lastStatusItem = statusHistory[statusHistory.length - 1];\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Manage order\n      </Typography>\n      <ReviewOrder address={order.address} items={cartItems}/>\n      <Typography variant=\"h6\">\n        Status:\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        {lastStatusItem?.status.toUpperCase()}\n      </Typography>\n      <Typography variant=\"h6\">\n        Change status:\n      </Typography>\n      <Formik\n        initialValues={{status: lastStatusItem.status, comment: ''}}\n        enableReinitialize\n        onSubmit={onChangeStatus}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n      <Typography variant=\"h6\">\n        Status history:\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"right\">Date and Time</TableCell>\n              <TableCell align=\"right\">Comment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {statusHistory.map((statusHistoryItem: any) => (\n              <TableRow key={order.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {statusHistoryItem.status.toUpperCase()}\n                </TableCell>\n                <TableCell align=\"right\">{(new Date(statusHistoryItem.timestamp)).toString()}</TableCell>\n                <TableCell align=\"right\">{statusHistoryItem.comment}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </PaperLayout>\n  );\n}"]},"metadata":{},"sourceType":"module"}